version: "3.6"
services:
  Plex-Meta-Manager:
    container_name: "Plex-Meta-Manager"
    entrypoint:
      - "/tini"
      - "-s"
      - "python3"
      - "plex_meta_manager.py"
      - "--"
    environment:
      - "HOST_CONTAINERNAME=Plex-Meta-Manager"
      - "PMM_TIME=6:00"
      - "PMM_DIVIDER=="
      - "PMM_WIDTH=200"
      - "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "GPG_KEY=${PLEX_META_MANAGER_GPG_KEY}"
      - "PYTHON_VERSION=3.11.1"
      - "PYTHON_PIP_VERSION=22.3.1"
      - "PYTHON_SETUPTOOLS_VERSION=65.5.1"
      - "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/66030fa03382b4914d4c4d0896961a0bdeeeb274/public/get-pip.py"
      - "PYTHON_GET_PIP_SHA256=1e501cf004eac1b7eb1f97266d28f995ae835d30250bec7f8850562703067dc6"
      - "TINI_VERSION=v0.19.0"
      - "PMM_DOCKER=True"
    hostname: "ccb81b85b634"
    image: "meisnate12/plex-meta-manager"
    ipc: "private"
    labels:
      net.unraid.docker.icon: "https://metamanager.wiki/en/latest/_static/pmm.png"
      net.unraid.docker.managed: "dockerman"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    volumes:
      - "/mnt/cache/appdata/Plex-Meta-Manager:/config"

  prowlarr:
    container_name: "prowlarr"
    entrypoint:
      - "/init"
    environment:
      - "PUID=99"
      - "PGID=100"
      - "UMASK=022"
      - "HOST_CONTAINERNAME=prowlarr"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$ "
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "XDG_CONFIG_HOME=/config/xdg"
    hostname: "2890abe72ad6"
    image: "ghcr.io/linuxserver/prowlarr:develop"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- 1.1.0.2322-ls85 Build-date:- 2023-01-16T20:46:00-06:00"
      maintainer: "Roxedus,thespad"
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-logo.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:9696]"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-01-16T20:46:00-06:00"
      org.opencontainers.image.description:
        "[Prowlarr](https://github.com/Prowlarr/Prowlarr)\
        \ is a indexer manager/proxy built on the popular arr .net/reactjs base stack\
        \ to integrate with your various PVR apps. Prowlarr supports both Torrent\
        \ Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr,\
        \ Lidarr, and Readarr offering complete management of your indexers with no\
        \ per app Indexer setup required (we do it all).  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-prowlarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "ae5d139546a0445844fee205fd3de89f152f47c4"
      org.opencontainers.image.revision: "ae5d139546a0445844fee205fd3de89f152f47c4"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-prowlarr"
      org.opencontainers.image.title: "Prowlarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-prowlarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "1.1.0.2322-ls85"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    ports:
      - "9696:9696/tcp"
    volumes:
      - "/mnt/cache/appdata/prowlarr:/config"
    working_dir: "/"

  sonarr:
    container_name: "sonarr"
    entrypoint:
      - "/init"
    environment:
      - "HOST_CONTAINERNAME=sonarr"
      - "PUID=99"
      - "PGID=100"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "XDG_CONFIG_HOME=/config/xdg"
      - "SONARR_BRANCH=main"
    hostname: "9485efda5f60"
    image: "linuxserver/sonarr"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- 3.0.9.1549-ls173 Build-date:- 2023-01-17T14:41:36+01:00"
      maintainer: "aptalca"
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-icon.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:8989]/"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-01-17T14:41:36+01:00"
      org.opencontainers.image.description:
        "[Sonarr](https://sonarr.tv/) (formerly\
        \ NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple\
        \ RSS feeds for new episodes of your favorite shows and will grab, sort and\
        \ rename them. It can also be configured to automatically upgrade the quality\
        \ of files already downloaded when a better quality format becomes available.\
        \  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-sonarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "dc0f2800cdf765afd9bde5a22feeb882da5eec1f"
      org.opencontainers.image.revision: "dc0f2800cdf765afd9bde5a22feeb882da5eec1f"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-sonarr"
      org.opencontainers.image.title: "Sonarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-sonarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "3.0.9.1549-ls173"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    ports:
      - "8989:8989/tcp"
    volumes:
      - "/mnt/user/data:/data"
      - "/mnt/cache/appdata/sonarr:/config"
      - "/dev/rtc:/dev/rtc:ro"
    working_dir: "/"

  radarr:
    container_name: "radarr"
    entrypoint:
      - "/init"
    environment:
      - "HOST_CONTAINERNAME=radarr"
      - "PUID=99"
      - "PGID=100"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$ "
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "XDG_CONFIG_HOME=/config/xdg"
    hostname: "0fa819aed414"
    image: "linuxserver/radarr"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- 4.3.2.6857-ls159 Build-date:- 2023-01-03T18:47:20-06:00"
      maintainer: "thelamer"
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:7878]"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-01-03T18:47:20-06:00"
      org.opencontainers.image.description:
        "[Radarr](https://github.com/Radarr/Radarr)\
        \ - A fork of Sonarr to work with movies Ã  la Couchpotato.  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-radarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "ce75c340c7332cbfea6836b8302d1c54d330471f"
      org.opencontainers.image.revision: "ce75c340c7332cbfea6836b8302d1c54d330471f"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-radarr"
      org.opencontainers.image.title: "Radarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-radarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "4.3.2.6857-ls159"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    ports:
      - "7878:7878/tcp"
    volumes:
      - "/mnt/cache/appdata/radarr:/config"
      - "/mnt/user/data:/data"
    working_dir: "/"

  lidarr:
    container_name: "lidarr"
    entrypoint:
      - "/init"
    environment:
      - "HOST_CONTAINERNAME=lidarr"
      - "PUID=99"
      - "PGID=100"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$ "
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "XDG_CONFIG_HOME=/config/xdg"
    hostname: "422f7f819702"
    image: "linuxserver/lidarr"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- 1.0.2.2592-ls106 Build-date:- 2022-12-24T08:59:46-06:00"
      maintainer: "thelamer"
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lidarr.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:8686]"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2022-12-24T08:59:46-06:00"
      org.opencontainers.image.description:
        "[Lidarr](https://github.com/lidarr/Lidarr)\
        \ is a music collection manager for Usenet and BitTorrent users. It can monitor\
        \ multiple RSS feeds for new tracks from your favorite artists and will grab,\
        \ sort and rename them. It can also be configured to automatically upgrade\
        \ the quality of files already downloaded when a better quality format becomes\
        \ available."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-lidarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "c79d880f06af559ccb4a979fd18f83d45d31938c"
      org.opencontainers.image.revision: "c79d880f06af559ccb4a979fd18f83d45d31938c"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-lidarr"
      org.opencontainers.image.title: "Lidarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-lidarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "1.0.2.2592-ls106"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    ports:
      - "8686:8686/tcp"
    volumes:
      - "/mnt/cache/appdata/lidarr:/config"
      - "/mnt/user/data:/data"
    working_dir: "/"

  bazarr:
    container_name: "bazarr"
    entrypoint:
      - "/init"
    environment:
      - "HOST_CONTAINERNAME=bazarr"
      - "PUID=99"
      - "PGID=100"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$ "
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
    hostname: "bd6e158230b4"
    image: "linuxserver/bazarr"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- v1.1.4-ls177 Build-date:- 2022-12-31T17:57:41+01:00"
      maintainer: "chbmb"
      net.unraid.docker.icon: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:6767]"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2022-12-31T17:57:41+01:00"
      org.opencontainers.image.description:
        "[Bazarr](https://www.bazarr.media/) is\
        \ a companion application to Sonarr and Radarr. It can manage and download\
        \ subtitles based on your requirements. You define your preferences by TV\
        \ show or movie and Bazarr takes care of everything for you."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-bazarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "9b1384c89d1499f86dfb4219b3c55477d139275f"
      org.opencontainers.image.revision: "9b1384c89d1499f86dfb4219b3c55477d139275f"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-bazarr"
      org.opencontainers.image.title: "Bazarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-bazarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v1.1.4-ls177"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    ports:
      - "6767:6767/tcp"
    volumes:
      - "/mnt/user/data/media/tv:/tv"
      - "/mnt/user/data/torrents:/data/torrents"
      - "/mnt/cache/appdata/bazarr:/config"
      - "/mnt/user/data/media/movies:/movies"
    working_dir: "/"

  readarr:
    container_name: "readarr"
    entrypoint:
      - "/init"
    environment:
      - "PGID=100"
      - "UMASK=002"
      - "HOST_CONTAINERNAME=readarr"
      - "PUID=99"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "APP_DIR=/app"
      - "CONFIG_DIR=/config"
      - "ARGS="
      - "XDG_CONFIG_HOME=/config/.config"
      - "XDG_CACHE_HOME=/config/.cache"
      - "XDG_DATA_HOME=/config/.local/share"
      - "S6_BEHAVIOUR_IF_STAGE2_FAILS=2"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "BUILD_ARCHITECTURE=linux-amd64"
    hostname: "9b9fc1246c4b"
    image: "hotio/readarr:nightly"
    ipc: "private"
    labels:
      net.unraid.docker.icon: "https://hotio.dev/webhook-avatars/readarr.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:8787]"
      org.opencontainers.image.created: "2023-01-17T14:58:23Z"
      org.opencontainers.image.revision: "11e33d6d96e045f6b9f547ae12e4e673a7234ce9"
      org.opencontainers.image.source: "https://github.com/hotio/readarr/tree/nightly"
      org.opencontainers.image.title: "hotio/readarr:nightly"
      org.opencontainers.image.url: "https://github.com/hotio/readarr/blob/master/README.md"
      org.opencontainers.image.vendor: "hotio"
      org.opencontainers.image.version: "0.1.1.1527"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    ports:
      - "8787:8787/tcp"
    volumes:
      - "/mnt/cache/appdata/readarr:/config"
      - "/mnt/user/data/media/books:/books"
      - "/mnt/user/data/media/calibre:/calibre"
      - "/mnt/user/data/torrents:/data/torrents"

  unmanic:
    container_name: "unmanic"
    devices:
      - "/dev/dri:/dev/dri"
    entrypoint:
      - "/init"
    environment:
      - "NVIDIA_PATCH_VERSION="
      - "HOST_CONTAINERNAME=unmanic"
      - "PUID=99"
      - "PGID=100"
      - "NVIDIA_VISIBLE_DEVICES=all"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/root"
      - "TERM=xterm"
      - "LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri"
      - "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility"
    hostname: "0710a075ff90"
    image: "josh5/unmanic:latest"
    ipc: "private"
    labels:
      build_version: "Linuxserver.io version:- bcd93376-ls76 Build-date:- 2022-05-24T07:06:17+02:00"
      maintainer: "Josh.5 <jsunnex@gmail.com>"
      net.unraid.docker.icon: "https://raw.githubusercontent.com/Unmanic/unmanic/master/icon.png"
      net.unraid.docker.managed: "dockerman"
      net.unraid.docker.webui: "http://[IP]:[PORT:8889]/"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2022-05-24T07:06:17+02:00"
      org.opencontainers.image.description: "baseimage-ubuntu image by linuxserver.io"
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-baseimage-ubuntu"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "ad251d995a46272992e8f464e234c0f149d60f23"
      org.opencontainers.image.revision: "ad251d995a46272992e8f464e234c0f149d60f23"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-baseimage-ubuntu"
      org.opencontainers.image.title: "Baseimage-ubuntu"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-baseimage-ubuntu/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "bcd93376-ls76"
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "500m"
    networks:
      - "alphaproxy"
    ports:
      - "8889:8888/tcp"
    volumes:
      - "/mnt/user/data/media/pictures:/library/pictures"
      - "/mnt/user/data/media/tv:/library/tv"
      - "/mnt/user/temp:/tmp/unmanic"
      - "/mnt/cache/appdata/unmanic:/config"
      - "/mnt/user/data/media/movies:/library/movies"
      - "/mnt/user/data/media/music:/library/music"
